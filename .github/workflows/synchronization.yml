name: Sync Repositories

on:
  workflow_call:
    inputs:
      node-version:
        description: 'Node version to run this workflow. Default: 18 as it is in action cache'
        default: '18'
        required: false
        type: string
      changeLookUpPath:
        description: 'Specify the folder to look for changes and publish'
        required: true
        type: string
    secrets:
      appSecret:
        required: true

jobs:
  run:
    name: Synchronization
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: master
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-version }}

      - name: Check for changed files
        id: changed_files
        uses: tj-actions/changed-files@v42

      - name: Determine if changes are in the specified path
        id: check_path
        run: |
          echo "path_changes=$(echo '${{ steps.changed_files.outputs.all_changed_files }}' | grep -c '${{ inputs.changeLookUpPath }}')" >> $GITHUB_ENV

      - name: Check out remote repository if changes
        if: env.path_changes != '0'
        uses: actions/checkout@v4
        with:
          repository: FrankJaskon/repo-2
          token: ${{ secrets.appSecret }}
          path: repo2

      - name: Sync files to remote repository if changes
        if: env.path_changes != '0'
        run: |
          echo "Starting rsync..."
          rsync -av --progress ${{ inputs.changeLookUpPath }}/ repo2/
          echo "rsync completed."

      - name: Apply changes and commit if changes
        if: env.path_changes != '0'
        working-directory: repo2
        run: |
          set -x
          find . -type f \( -name '*.js' -o -name '*.json' \) -exec sed -i 's/rees46/personaClick/g; s/Rees46/PersonaClick/g' {} +
          
          git config user.name 'FrankJaskon'
          git config user.email 'frankjaskon@gmail.com'
          BRANCH_NAME=feat/new-release-$(date +%Y%m%d%H%M%S)
          git checkout -b $BRANCH_NAME
          
          git add .
          if git diff --staged | grep -q .; then
            git commit -m "update code base"
            git push --set-upstream origin $BRANCH_NAME
            PR_TITLE="automated release"
            PR_BODY="This is an automated pull request to update from branch ${{ env.BRANCH_NAME }}"
            gh pr create --title "$PR_TITLE" --body "$PR_BODY" --base master --head $BRANCH_NAME
          else
            echo "No changes to commit, skipping commit and PR creation."
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
